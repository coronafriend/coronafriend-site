server {
    listen 80;
    listen [::]:80;
    server_name %CORONAFRIEND_BARE_DOMAIN%;
    return 301 https://%CORONAFRIEND_DOMAIN%;
}

server {
    listen 80;
    listen [::]:80;

    server_name %CORONAFRIEND_DOMAIN%;
    return 301 https://%CORONAFRIEND_DOMAIN%;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name %CORONAFRIEND_BARE_DOMAIN%;
    return 301 https://%CORONAFRIEND_DOMAIN%;

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";

    # Stop click-jacking by disabling frame or iframe embedding
    add_header X-Frame-Options "SAMEORIGIN";

    # Force our preferences, rather than the client's
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_prefer_server_ciphers on;

    # SSLv2 is insecure; disable it.
    # Also disable SSLv3; TLS 1.0 is vulnerable to a downgrade attack.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Minimal cipher suite definition
    # ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Optimal cipher suite for backwards (IE6/WinXP) compatibility
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    # Enable forward secrecy and Diffie Hellman ephemeral parameters
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Enable OSCP (Online Certificate Status Protocol) stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # SSL certificates courtesy of LetsEncrypt's certbot
    ssl_certificate /etc/letsencrypt/live/%CORONAFRIEND_BARE_DOMAIN%/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/%CORONAFRIEND_BARE_DOMAIN%/privkey.pem;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name %CORONAFRIEND_DOMAIN%;

    error_log /var/log/nginx/%CORONAFRIEND_DOMAIN%.error.log;
    access_log /var/log/nginx/%CORONAFRIEND_DOMAIN%.access.log main;

    root /var/www/domains/%CORONAFRIEND_DOMAIN%/public;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
        auth_basic      "Restricted Access";
        auth_basic_user_file    /etc/nginx/.htpasswd;
    }

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";

    # Stop click-jacking by disabling frame or iframe embedding
    add_header X-Frame-Options "SAMEORIGIN";

    # Force our preferences, rather than the client's
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_prefer_server_ciphers on;

    # SSLv2 is insecure; disable it.
    # Also disable SSLv3; TLS 1.0 is vulnerable to a downgrade attack.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Minimal cipher suite definition
    # ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Optimal cipher suite for backwards (IE6/WinXP) compatibility
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    # Enable forward secrecy and Diffie Hellman ephemeral parameters
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Enable OSCP (Online Certificate Status Protocol) stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # SSL certificates courtesy of LetsEncrypt's certbot
    ssl_certificate /etc/letsencrypt/live/%CORONAFRIEND_BARE_DOMAIN%/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/%CORONAFRIEND_BARE_DOMAIN%/privkey.pem;
}
